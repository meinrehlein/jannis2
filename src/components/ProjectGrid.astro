---
import type { CollectionEntry } from "astro:content";
import ProjectCard from "./ProjectCard.astro";

type Props = {
  projects: CollectionEntry<"projects">[];
  sortField?: string;
};

const { projects, sortField } = Astro.props;
const grid = "projects";

let sortedProjects = [...projects];
if (sortField) {
  sortedProjects.sort((a, b) => (a.data[sortField] ?? 0) - (b.data[sortField] ?? 0));
} else {
  // Sort by year DESC, then month DESC
  sortedProjects.sort((a, b) => {
    const yearDiff = (b.data.year ?? 0) - (a.data.year ?? 0);
    if (yearDiff !== 0) return yearDiff;
    return (b.data.month ?? 0) - (a.data.month ?? 0);
  });
}
---

<section class="project-grid" id="grid" data-grid={grid}>
  {sortedProjects.map((project) => <ProjectCard project={project} />)}
</section>


<style>
section {
    position: relative;
    overflow: visible;
    display: grid;
    width: 100%;
    max-width: 100vw; /* Prevents overflow */
    box-sizing: border-box;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem; /* Smaller gap for mobile */
    margin: 1rem 0 10rem;
    min-height: 400px;
  }
 
  
  @media screen and (min-width: 50em) {
    section {
      grid-template-columns: repeat(2, 1fr);
      gap: 5rem; /* Reduce gap for large screens */
      margin: 2rem 0 10rem;
    
    }
  }
</style>
